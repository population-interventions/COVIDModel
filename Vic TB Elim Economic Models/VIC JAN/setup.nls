;;
;; Setup and functions particular to setup that don't have anywhere else to live.
;;

to matchages
  ask n-of int five simuls [
    set agerange 5
  ]
  ask n-of int fifteen simuls with [ agerange != 5 ] [
    set agerange 15
  ]
  ask n-of int twentyfive simuls with [ agerange > 15 ] [
    set agerange 25
  ]
  ask n-of int thirtyfive simuls with [ agerange > 25 ] [
    set agerange 35
  ]
  ask n-of int fortyfive simuls with [ agerange > 35 ] [
    set agerange 45
  ]
  ask n-of int fiftyfive simuls with [ agerange > 45 ] [
    set agerange 55
  ]
  ask n-of int sixtyfive simuls with [ agerange > 55 ] [
    set agerange 65
  ]
  ask n-of int seventyfive simuls with [ agerange > 65 ] [
    set agerange 75
  ]
  ask n-of int eightyfive simuls with [ agerange > 75 ] [
    set agerange 85
  ]
  ;; remaining people in the model are in their 90's as everying is set an agerange of 95 at initialisation
  ;; ask n-of int ninetyfive simuls with [ agerange > 85 ] [
  ;; set agerange 95
  ;;]
end


to setdeathrisk
  ;; risk of death associated with ageranges if they contract COVID-19
  if agerange = 5 [
    set riskofDeath 0
  ]
  if agerange = 15 [
    set riskofDeath .002
  ]
  if agerange = 25 [
    set riskofDeath .002
  ]
  if agerange = 35 [
    set riskofDeath .002
  ]
  if agerange = 45 [
    set riskofDeath .004
  ]
  if agerange = 55 [
    set riskofDeath .01
  ]
  if agerange = 65 [
    set riskofDeath .05
  ]
  if agerange = 75 [
    set riskofDeath .05
  ]
  if agerange = 85 [
    set riskofDeath .151
  ]
  ;; updated from department of health Report 22 - does not map directly to age deciles here
  if agerange = 95 [
    set riskofDeath .151
  ]
end

to resetlanding
  ;; ensures that resources don't start on top of one another in the model
  if any? other resources-here [
    set ycor one-of [ -30 -10 10 30 ]
    resetlanding
  ]
end


to iteratetimenow
  set timenow random int Ownillnessperiod
  UpdatePersonalVirulence
  if timenow <= 7 [
    iteratetimenow
  ]
end


to resethouseholdUnit
  ;; allocates children to households
  if schoolsPolicy = true [
    ask simuls with [ agerange > 18 and agerange <= 60 ] [
      ;; allows for upo 5% of houses to be sharehouses / care facilities, etc.
      if count simuls with [householdUnit = [ householdUnit ] of myself ] > 2 and 95 > random 100 [
        set householdUnit random 600
      ]
    ]
    ask simuls with [ agerange > 60 ] [
      ;; allows for older people in group homes to make up to 7% of housing units
      if count simuls with [ householdUnit = [ householdUnit ] of myself ] > 2 and 93 < random 100 [
        set householdUnit [ householdUnit ] of one-of simuls with [ count other simuls with [ householdUnit = [ householdUnit ] of myself ] = 0 ]
      ]
    ]
  ]
end

to calculatedailyrisk
  ;; estimates risk of death per day for the duration of the period of illness
  ;; used for stats more than calibrated to real world given most people die late in the illness period
  set dailyrisk ( riskofDeath / Illness_period )
end


to resetPersonalVirulence
  ;; ensures that personalVirulence is within bounds
  if personalVirulence > 100 [
    set personalVirulence random-normal global_Transmissability 10
  ]
  if personalVirulence < 0 [
    set personalVirulence random-normal global_Transmissability 10
  ]
end

;;*******************************************************************************************************************************
;;** Buttons **
;;*******************************************************************************************************************************

to setup
  random-seed RAND_SEED ;; Read from a behaviourSpace variable.

  profiler:start

  rngs:init

  clear-all
  ;;import-drawing "Background1.png" ;; imports MSD image

  ;; illness period estimation using ln transform
  set Illness_Periodvariance se_Illnesspd
  set BetaIllnessPd ln (1 + (illness_PeriodVariance / illness_period ^ 2))
  set M (ln illness_period) - (BetaillnessPd / 2)
  set S sqrt BetaIllnessPd

  ;; illness period estimation using ln transform
  set Incubation_Periodvariance se_Incubation
  set BetaIncubationPd ln (1 + (incubation_PeriodVariance / incubation_period ^ 2))
  set MInc (ln incubation_period) - (BetaincubationPd / 2)
  set SInc sqrt BetaIncubationPd

  ask red-links [
    set color red
  ]
  ask patches [
    set pcolor black
  ]
  ;; sets a proportion of interactions outside vs inside
  ask n-of (count patches * Outside) patches [
    set pcolor green
  ]
  ;; a beta function for testing locating many people in one place at a single time
  ask n-of 100 patches with [ pcolor = black ] [
    set destination 1
  ]

  ;; setting up the hospital
  ask n-of 1 patches [
    sprout-medresources 1
  ]
  ask medresources [
    set color white
    set shape "Health care"
    set size 5
    set xcor 20
    set ycor -20
  ]
  calculateScaledBedCapacity
  ask medresources [
    ask n-of Scaled_Bed_Capacity patches in-radius 5 [
      set pcolor white
    ]
  ]
  ask n-of Available_Resources patches [
    sprout-resources 1
  ]

  ;; sets up resources that people want to purchase
  ask resources [
    set color white
    set shape "square"
    set size 5
    set volume one-of [2.5 5 7.5 10 ]
    resize
    set xcor -20
    set ycor one-of [-30 -10 10 30 ]
    resetlanding
  ]

  ;; set up people in the environment and allocates characteristics to them
  ask n-of Population patches with [ pcolor = black ] [
    sprout-simuls 1 [
      set size 2
      set shape "dot"
      set color 85
      set householdUnit random 1000
      set agerange 95
      set timenow 0
      set IncubationPd int ownIncubationPeriod
      set InICU 0
      set anxiety 0
      set sensitivity random-float 1
      set R 0

      set income random-exponential mean_Individual_Income
      move-to one-of patches with [ pcolor = black ]

      set riskofdeath .01
      set personalTrust random-normal 75 10
      set WFHCap random 100
      set requireICU random 100
      set personalVirulence random-normal Global_Transmissability 10
      set haveApp random 100

      set wearsMask random 100 ;; resethealth resetincome calculateincomeperday calculateexpenditureperday resettrust
      set detectable random 100 ;; identifies whether the person is detectable or not
      set returntoschool random 100
      set ownIllnessPeriod ( exp random-normal M S ) ;; log transform of illness period
      set ownIncubationPeriod ( exp random-normal Minc Sinc ) ;;; log transform of incubation period

      ;;set ownComplianceWithIsolation ( exp random-normal Mcomp SComp ) ;; log transform of compliance with isolation

      rngs:init ;; replacing previous log transform with beta distribution
      let stream_id random-float 999
      let seed random-float 999
      rngs:set-seed stream_id seed
      let complianceDist rngs:rnd-beta stream_id 450.3 23.7

      set ownComplianceWithIsolation complianceDist
      let maskWearEfficacy rngs:rnd-beta stream_id 24.3 8.08

      set ownMaskEfficacy maskWearEfficacy * Mask_Efficacy_Discount ;; assigning mask efficacy to individuals around a distribution with median 75% or 75% x 1/3 if 33 as per request based on Burnett Institute #s

      set asymptom random 100
      set essentialWorker random 100
      if agerange >= 18 and agerange < 70 [
        set essentialWorker random 100
      ]

      
      iterateAsymptomAge
      resetPersonalVirulence
      assignApptoEssential
      assigndetectablestatus ;; identifies people unlikely to be found

      ;set pta random-float ((Proportion_time_avoid - (Proportion_Time_Avoid * .2)) + random-float (Proportion_time_avoid + (1 - Proportion_time_avoid) * .2))
      ;set ppa random-float ((Proportion_People_avoid - (Proportion_People_Avoid * .2)) + random-float (Proportion_People_avoid + (1 - Proportion_People_avoid) * .2))
    ]
  ]

  ;; set up initial infected people
  set scalephase InitialScale
  ;; sets up the initial date for looking at policy-changes
  set resetdate 7

  ask n-of ( Current_Cases ) simuls [
    set color red
    set tracked 1
    set reported 1
    set timenow random int OwnIllnessperiod
    UpdatePersonalVirulence
    if timenow <= 7 [
      ;; includes a proportion reported cases in the community at the initialisation step matched to current day data
      iteratetimenow
    ]
  ]

  ;; put a function in here that iterates this
  ask n-of ((Current_Cases * (AsymptomaticPercentage / 100) * ( Undetected_Proportion / 100 ))) simuls [
    set color red
    set asymptomaticFlag 1
    set undetectedFlag 1
    set tracked 0
    set reported 0
    set timenow random int OwnIllnessperiod
    UpdatePersonalVirulence
    if timenow <= 7 [
      ;; includes a proportion of undetected cases in the community at the initialisation step
      set timenow random int Ownillnessperiod
      UpdatePersonalVirulence
    ]
  ]

  if count simuls with [ color = red ] <= 1 [
    ask n-of 1 simuls [
      set xcor 0
      set ycor 0
      set color red
      set timenow int ownIllnessperiod - 1 ;; sould be 'ownincubationperiod' for new outbreaks
    ]
  ]

  ;; assigns death risks for people based on their age-range
  set five int ( Population * .126 ) ;; insert age range proportions here
  set fifteen int ( Population * .121 )
  set twentyfive int ( Population * .145 )
  set thirtyfive int ( Population * .145 )
  set fortyfive int ( Population * .129 )
  set fiftyfive int ( Population * .121 )
  set sixtyfive int ( Population * .103 )
  set seventyfive int ( Population * .071 )
  set eightyfive int ( Population * .032 )
  set ninetyfive int ( Population * .008 )

  matchages ;; assigns risk to age ranges (see below)

  ;; spend CalculateIncomePerday
  ask simuls [
    set health (100 - Agerange + random-normal 0 2)
    calculateDailyrisk
    setdeathrisk
  ]

  set contact_radius 0 ;; sets contact radius of people
  set days 0 ; used to count days since events - currently redundant
  set Quarantine false
  set eliminationDate 0 ; used to identify the date of elimination where no current, unrecovered cases exist
  set Proportion_People_Avoid PPA ;; used to set the proportion of people who are socially distancing
  set Proportion_Time_Avoid PTA ;; used to set the proportion of time that people who are socially distancing are socially distancing (e.g., 85% of people 85% of the time)
  set spatial_distance false
  set case_isolation false

  ;; setting households up
  ;; allocates adults to a household unit range
  ask simuls with [ agerange > 18 and agerange <= 60 ] [
    if 95 > random 100 [
      set householdUnit random 600
    ]
  ]
  ;; allocated older adults to household Units that don't include young children or teenagers
  ask simuls with [ agerange > 60 and agerange <= 80 ] [
    if 95 > random 100 [
      set householdUnit random 200 + 600
    ]
  ]
  ;; allocated older adults 80+ to household Units that don't include young children or teenagers
  ask simuls with [ agerange > 80 ] [
    if 95 > random 100 [
      set householdUnit random 300 + 600
    ]
  ]
  ;; allocates up to two adults per household
  ask simuls with [ agerange > 18 and agerange <= 60 ] [
    if 95 > random 100 [
      if count simuls with [ householdUnit = [ householdUnit ] of myself ] > 2 [
        set householdUnit random 600
      ]
    ]
  ]
  ;; Identifies students
  ask simuls with [ agerange = 15 and agerange = 5 and studentFlag != 1 ] [
    if 95 > random 100 [
      set householdUnit [ householdUnit ] of one-of simuls with [ householdUnit <= 600 and agerange > ([agerange ] of myself + 20) ]
    ]
  ]
  ask simuls [
    if agerange < 20 [
      set studentFlag 1
    ]
  ]
  ;; allocates children and teenagers to a household where there are adults at least 20 years older than them and there are not more than 2 adults in the house

  resetHouseholdUnit ;; iterates this process
  ask simuls [
    resetlandingSimul
  ]

  ;; this ensures that half the people in households with existing infections have also had an infection and prevents a big spike early-on
  ask simuls [
    if any? other simuls in-radius 3 with [ color = red ] and Household_Attack > random 100 [
      set color yellow
    ]
  ]

  ask simuls [
    if agerange = 5 and 60 > random 100 [
      set AsymptomaticFlag 1
    ]
  ]

  ;;set tracking false ;; ensures this is set to false each time the model starts
  ;;set link_switch false ;; ensures this is set to false each timme the model starts
  ;;set schoolspolicy false ;; ensures that the schools settings don't begin before the policy trigger starts
  ;;set maskPolicy false ;; that the mask policy doesn't begin before the policy trigger starts
  ;;set assignAppEss false ;; that the assigning the App to EssentialWorkers doesn't begin before the policy trigger starts
  reset-ticks
  setupstages ;; setting up for the MJA runs
end