
to finished
  if freewheel = true [
    ;; stops the model if the following criteria are met - no more infected people in the simulation and it has run for at least 10 days
    if ticks > 100 and count simuls with [ color = red ] = 0 [
      stop
    ]
  ]
end

to superSpread
  if count simuls with [ color = red and tracked = 0 ] > 1 and Case_Isolation = false [
    if Superspreaders > random 100 [
      ;; asks some people who are infected and not tracked to move to random new areas,
      ;;potentially among susceptible people if travel restrictions are not current
      ask n-of int (count simuls with [ color = red and tracked = 0 ] / Diffusion_Adjustment ) simuls with [ color = red and tracked = 0 ] [
        fd world-width / 2
      ]

      ;; same as above but for recovered people to take into account immunity in the population
      if count simuls with [ color = yellow ] >= Diffusion_Adjustment [
        ask n-of int ( count simuls with [ color = yellow ] / Diffusion_Adjustment ) Simuls with [ color = yellow ] [
          fd world-width / 2
        ]
      ]
    ]
  ]

  if count simuls with [ color = red and timenow < ownIncubationPeriod and tracked = 0 ] > Diffusion_Adjustment and Case_Isolation = true [
    if Superspreaders > random 100 [
      ;; only moves people who don't know they are sick yet
      ask n-of int (count simuls with [ color = red and timenow < ownIncubationPeriod and tracked = 0 ] / Diffusion_Adjustment ) simuls
          with [ color = red and timenow < ownIncubationPeriod and tracked = 0 ] [
        fd world-width / 2
      ]

      ;; this ensures that people with immunity also move to new areas, not just infected people
      if count simuls with [ color = yellow ] >= 1 [
        ask n-of int (count simuls with [ color = yellow ] / Diffusion_Adjustment) simuls with [ color = yellow ] [
          fd world-width / 2
        ]
      ]
    ]
  ]
end


;;;*******************ANXIETY******************::::::::::::::::::


to Globalanxiety
  ;; levels of global anxiety are tied to knowledge of dead and infected
  ;; people multiplied by media exposure of dead and infected people
  let anxiouscohort (count simuls with [ color = red ] + count simuls with [ color = black ] - count simuls with [ color = yellow ] ) / Total_Population
  set anxietyFactor anxiouscohort * media_Exposure * Scale_Factor ^ scalephase
end

to GlobalTreat
  ;; send people to quarantine if they have been identified
  let eligiblesimuls simuls with [ color = red and inICU = 0 and ownIncubationPeriod >= Incubation_Period and asymptom >= AsymptomaticPercentage and tracked = 1 ]

  ;; only symptomatic cases are identified
  if (count simuls with [ InICU = 1 ]) < (count patches with [ pcolor = white ]) and Quarantine = true and any? eligiblesimuls [
    ask n-of ( count eligiblesimuls * Track_and_Trace_Efficiency ) eligiblesimuls [
      move-to one-of patches with [ pcolor = white ]
      set inICU 1
    ]
  ]
end

to TriggerActionIsolation
  ;; sets the date for social isolation and case isolation
  if PolicyTriggerOn = true and Freewheel = false [
    if ticks >= Triggerday and Freewheel = false [
      set Spatial_Distance true
      set Case_Isolation true
      set Quarantine true
    ]
  ]
end

to forwardTime
  ;; counts days per tick, likely redundant at present as days are not used for anything right now.
  set days days + 1
end

To Unlock
  ;; reverses the initiation of social distancing and isolation policies over time. Recognises that the policies are interpreted
  ;; and adherence is not binary. Adherence to policies is associated with a negative exponential curve linked to the current day
  ;; and the number of days until the policies are due to be relaxed at which point they are relaxed fully.

  if Complacency = true and PolicyTriggerOn = true and LockDown_Off = true and ticks >= Triggerday
      and int Proportion_People_Avoid > ResidualCautionPPA [
    set PPA (PPA - 1 )
    set Proportion_People_Avoid PPA
  ]

  if Complacency = true and PolicyTriggerOn = true and LockDown_Off = true and ticks >= Triggerday
      and int Proportion_Time_Avoid > ResidualCautionPTA [
    set PTA (PTA - 1 )
    set Proportion_Time_Avoid PTA
  ]
end

;;;;;;;;;;;;*********END OF TTI FUNCTIONS******* ;;;;;;;;;;;;;

to OSCase
  if policytriggeron = true and count simuls with [ color = red and imported = 0 ] > 1 [
    let totallocal count simuls with [ color != cyan and imported = 0 ]
    let totalimported count simuls with [ imported = 1 ]
    let ratio ( totalimported / (totallocal + totalimported) )

    ;; contributes additional cases as a result of OS imports prior to lockdown
    if ticks <= triggerday and OS_Import_Switch = true and ratio < OS_Import_Proportion [
      ask n-of ( count simuls with [ color = red ] * .10 ) simuls with [ color = cyan ] [
        set color red
        set timenow int ownIncubationPeriod - random-normal 1 .5
        set EssentialWorkerPriority random 100
        set imported 1
      ]
    ]

    ;; creates steady stream of OS cases at beginning of pandemic
    if ticks <= triggerday and OS_Import_Switch = true [
      ask n-of 1 simuls with [ color = cyan ] [
        set color red
        set timenow int ownIncubationPeriod - random-normal 1 .5
        set EssentialWorkerPriority random 100
        set imported 1
      ]
    ]

    ;; contributes additional cases as a result of OS imports after lockdown
    if ticks > triggerday and OS_Import_Switch = true and ratio < OS_Import_Post_Proportion [
      ask n-of ( count simuls with [ color = red ] * .05 ) simuls with [ color = cyan ] [
        set color red
        set timenow int ownIncubationPeriod - random-normal 1 .5
        set EssentialWorkerPriority random 100
        set imported 1
        set tracked 1
      ]
    ]
  ]
end

to stopfade
  ;; prevents cases from dying out in the eraly stage of the trials when few numbers exist
  if freewheel != true [
    if ticks < Triggerday and count simuls with [ color = red ] < 3 [
      ask n-of 1 simuls with [ color = cyan ] [
        set color red
        set timenow int ownIncubationPeriod - 1
        set EssentialWorkerPriority random 100
      ]
    ]
  ]
end

to-report nonesspercentage
  if count simuls with [ essentialworkerflag != 1 and color != cyan ] > 0 [
    report (count simuls with [ essentialworkerflag != 1 and color != cyan] ) / (count simuls with [ essentialWorkerFlag != 1 ])
  ]
end

to linearbehdecrease
  if complacency = true [
    if ticks > triggerday and ppa > ResidualCautionppa [
      set ppa (ppa - 1)
      set pta ( pta - 1)
    ]
  ]
end

to updateoutside
  ;; controls the amount of time that interactions happen outside
  if count patches with [ pcolor = green ] < ( Outside * (count patches) ) [
    ask n-of random 10 patches with [ pcolor = black ] [
      set pcolor green
    ]
  ]
  if count patches with [ pcolor = green ] > ( Outside * (count patches) ) [
    ask n-of random 10 patches with [ pcolor = green ] [
      set pcolor black
    ]
  ]
end

to incursion
  ;; randomly asks someone to become infected
  if ticks > 0 and currentinfections = 0 and IncursionRate > random-float 100 [
    ask one-of simuls with [ color = cyan ] [
      set color red
    ]
  ]
end

to resetMetricAverages
  ifelse transmission_count > 0
  [
    set transmission_average transmission_sum / transmission_count
  ]
  [
    set transmission_average -1
  ]
  set transmission_count 0
  set transmission_sum 0
  
  ;print "moveCount"
  ;print moveCount
  ;print foundUseCount
  ;set moveCount 0
  ;set foundUseCount 0
end


;;*******************************************************************************************************************************
;;** Buttons **
;;*******************************************************************************************************************************

to go
  ;; these funtions get called each time-step
  
  resetMetricAverages
  ;; Set a list of policy parameters (span (speed), tracking, mask_wearning etc..) based on current stage and stage reset timers
  setupstages
  
  vaccine_update
  set global_schoolActive policyTriggerOn = true and freewheel = false and schoolsPolicy = true and ticks >= triggerday + SchoolReturnDate
  
  ;; All the simulants independently either move outside or back to home
  ask simuls [
    ;; Untracked people have their speed set to the current recommended speed, based on policy.
    simul_respeed
    ;; Set 1/7th of people who are near a destination to move to that destination.
    simul_visitDestination
    ;; Move around, or not. It's random.
    simul_move
  ]
  
  ;; Patches update the flag that sets whether they have a simulant on them.
  ask simuls [
    simul_update_patch_utilisation
  ]
  
  ;; Simulants avoid people if social distancing is enabled, and they are not essential workers (or have some other reason to be in a crowd)
  ;; Note that simulants can effect each other in this stage.
  ask simuls [
    simul_avoid
  ]
  
  ;; Simulants update how effective they are at spreading or receiving the virus, then add their infectiveness to the patch infectiveness
  ;; list (if they are infective).
  ask simuls [
    ;; creates a triangular distribution of virulence that peaks at the end of the incubation period
    simul_updatepersonalvirulence
    ;; Set a proprtion of people to wear masks when not home  (uses mask_Wearing (0-100) policy param)
    simul_checkMask
    ;; Tell the patch I am on whether I am infected
    simul_record_patch_infectiveness
  ]
  
  ;; Succeptible simulants look at the patch infectiveness list and possibly become infected by each entry they find.
  ask simuls [
    ;; Potentially catch the infection from patch infectiveness
    simul_infect
  ]
  
  ;; Simulants do a bunch of non-interactive housekeeping.
  ask simuls [
    ;; if you are not dead at the end of your illness period, then you become recovered and turn yellow. Don't need hospital resources anymore.
    simul_recover
    ;; Increment illness time and possibly lose 'health' due to it. It is unclear what health is for.
    simul_settime
    ;; Possibly die if infected.
    simul_death
    ;; Move everyone home based on their chance of being compliant with isolation. It is weird that this happens after simul_move, in which people
    ;; who are out and about can infect each other.
    simul_isolation
    ;; Recovered people can randomly become succeptible again.
    simul_recovered_lose_immunity
    ;; Give people anxiety based on global factors.
    simul_createanxiety
    ;; Pick up resources, which seems to reduce anxiety?
    ;simul_gatherreseources
    ;; Infected people with inICU = 1 are moved to a white patch (hospital?)
    simul_treat
    ;; Take the rolling average of contacts over the past seven days, only for non-infected people. Is this needed?
    simul_Countcontacts
    ;; Set infected people to always require ICU after their incubation period???
    simul_checkICU
    ;; Randomly start tracking infected people based on track_and_trace_efficiency. Note that simul_traceme can also be called upon being infected
    ;; so track_and_trace_efficiency is not exactly the tracking rate per timestep.
    simul_traceme
    ;; Set EssentialWorkerFlag based on proportion of population that is an essential worker (uses Essential_Workers (0-100) policy param)
    simul_EssentialWorkerID
    ;; Randomly set app-people to hunted, and set hunted people to tracked.
    simul_hunt
    ;; enables people to access the support packages (???)
    ;simul_AccessPackage
    ;; If I am succeptible and a household member is tracked, move home and set pace to 0, set isolated=1. Also track isolated=1 infected people.
    simul_HHContactsIso
    ;; Randomly vaccinate people according to uptake and stage.
    simul_vaccinate_me
  ]
  
  ; *current excluded functions for reducing processing resources**
  ask medresources [
    allocatebed
  ]
  ;ask resources [
  ;  deplete
  ;  replenish
  ;  resize
  ;  spin
  ;]
  ;ask packages [
  ;  absorbshock
  ;  movepackages
  ;]

  ;; stops the model if the following criteria are met - no more infected people in the simulation and it has run for at least 10 days, only if freewheel = true.
  finished
  ;CruiseShip
  
  
  ;; Send people to ICU if they have been identified
  GlobalTreat
  ;; Set anxiety factor based on some infected/dead/recovered count, multiplied by media_Exposure
  ;Globalanxiety
  
  ;; Randomly move infected people  who are untracked or unaware they are sick to new areas, based on the Superspreaders parameter, set in Stages.
  SuperSpread
  
  ;; set numberinfected cumulativeInfected (???)
  CountInfected
  
  ;; Calculate proportional change in real infection count. Updates InfectionChange, TodayInfections and YesterdayInfections
  CalculateDailyGrowth
  
  ;; Enable distancing, isolation and quarantine based on triggers
  TriggerActionIsolation
  
  ;; Mouse click does something interactive
  ;DeployStimulus
  
  ;setInitialReserves
  ;; Set AverageContacts. Doesn't appear to do anything?
  CalculateAverageContacts
  
  ;; Check whether to scale up, which occurs when 10% of the agents are infected.
  ScaleUp
  
  ;; Reverses the initiation of social distancing and isolation policies over time.
  Unlock

  ;; Calculate various metrics, which may be used for policy or may just be output.
  setCaseFatalityRate
  countDailyCases
  calculatePopulationScale
  calculateICUBedsRequired
  calculateScaledBedCapacity
  calculateCurrentInfections
  calculateEliminationDate
  
  ;; Update tracking links in covid app or similar tracing functions
  assesslinks
  ;; PotentialContacts metric
  calculatePotentialContacts
  
  ;; Cache number of infected (red) suceptible (blue (actually cyan)) and recovered (yellow) agents
  countRed
  countBlue
  countYellow
  
  ;; Randomly remove the excess agents when they exceed the fixed agent population (eg 2500), provided they are not infected or dead.
  scaledownhatch
  
  ;; Set cumulativeInfected, not yesterdayInfected
  calculateYesterdayInfected
  ;; Set todayInfected from dailycases
  calculateTodayInfected
  ;; calculates scaledPopulation for working with smaller environments
  calculateScaledPopulation
  ;; Average R of infected simulants.
  calculateMeanR
  
  ;; Randomly set some simulants to be infected, to simulate overseas cases. They have imported = 1.
  OSCase
  ;; Spontaneously generate a case if ticks < Triggerday and there are fewer than three cases.
  stopFade
  ;seedCases
  
  ;; ensures that policies are enacted if their master switches are set to true at the time of the policy switch turning on (?)
  ;turnOnTracking
  
  ;; counts infections among Essential workers
  countEWInfections
  ;; counts infections among school students
  countSchoolInfections
  ;; stops the model if the following criteria are met - no more infected people in the simulation and it has run for at least 10 days
  finished
  ;; set meanDaysInfected
  calculateMeanDaysInfected
  ;profilerstop
  
  ;; set track_and_trace_efficiency based on the number of recent cases.
  traceadjust
  ;; Reduce ppa and pta usage if complacency = True.
  linearbehdecrease
  ;; Set lockdown stage and easing date, bases mostly on casesinperiod7
  CovidPolicyTriggers
  ;; Set casesinperiod7, which is only detected cases. Also sets casesinperiod14 and casesinperiod28.
  calculateCasesInLastPeriod
  ;calculateCashPosition
  
  ;; Set objFunction. Doesn't appear to do anything.
  calculateObjfunction
  ;; controls the amount of time that interactions happen outside
  updateoutside
  ;updatestudentStatus
  
  ;; Randomly turn suceptible agents into infected ones. Percentage chance = IncursionRate.
  incursion
  ;; Average "days into infection the person is identified as a case" of suceptible agents.
  CalculateMeanIDTime

  ;; set days days + 1
  ForwardTime
  tick
end